// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WalletApp.DAL;

#nullable disable

namespace WalletApp.Migrations.MSSQL.Migrations
{
    [DbContext(typeof(WalletAppEntities))]
    partial class WalletAppEntitiesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WalletApp.DAL.Models.CardBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Balance")
                        .HasColumnType("real");

                    b.Property<float>("Limit")
                        .HasColumnType("real");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("CardBalances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 1390f,
                            Limit = 1500f,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WalletApp.DAL.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardBalanceId")
                        .HasColumnType("int");

                    b.Property<int?>("CardBalanceId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pending")
                        .HasColumnType("bit");

                    b.Property<float>("Sum")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardBalanceId");

                    b.HasIndex("CardBalanceId1");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = false,
                            Sum = 24.5f,
                            Type = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CardBalanceId = 1,
                            Date = new DateTime(2024, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = false,
                            Sum = 27.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CardBalanceId = 1,
                            Date = new DateTime(2023, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CardBalanceId = 1,
                            Date = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Текст",
                            IconPath = "path",
                            Name = "IKEA",
                            Pending = true,
                            Sum = 24.5f,
                            Type = 0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WalletApp.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Admin",
                            Password = "pass"
                        },
                        new
                        {
                            Id = 2,
                            Login = "Ann",
                            Password = "pass2"
                        });
                });

            modelBuilder.Entity("WalletApp.DAL.Models.CardBalance", b =>
                {
                    b.HasOne("WalletApp.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WalletApp.DAL.Models.Transaction", b =>
                {
                    b.HasOne("WalletApp.DAL.Models.CardBalance", "CardBalance")
                        .WithMany()
                        .HasForeignKey("CardBalanceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WalletApp.DAL.Models.CardBalance", null)
                        .WithMany("Transactions")
                        .HasForeignKey("CardBalanceId1");

                    b.HasOne("WalletApp.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CardBalance");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WalletApp.DAL.Models.CardBalance", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
